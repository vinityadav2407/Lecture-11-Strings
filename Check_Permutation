Problem statement:-
For a given two strings, 'str1' and 'str2', check whether they are a permutation of each other or not.

Permutations of each other
Two strings are said to be a permutation of each other when either of the string's characters can be rearranged so that it becomes identical to the other one.

Example: 
str1= "sinrtg" 
str2 = "string"

The character of the first string(str1) can be rearranged to form str2 and hence we can say that the given strings are a permutation of each other.
Detailed explanation ( Input/output format, Notes, Images )
Constraints:
0 <= N <= 10^6
Where N is the length of the input string.

Time Limit: 1 second
Sample Input 1:
abcde
baedc
Sample Output 1:
true
Sample Input 2:
abc
cbd
Sample Output 2:
false
>>>>>>>
>>>>>
Solution:->
public class Solution {

	public static boolean isPermutation(String str1, String str2) {
		int frqarr[]=new int [256];
		boolean ans=true;
		for(int i=0; i<str1.length(); i++ ){
			char ch=str1.charAt(i);
			frqarr[ch]++;
		}
		for(int j=0; j<str2.length(); j++){
			char ch=str2.charAt(j);
			frqarr[ch]--;
		}
		for(int i=0; i<frqarr.length; i++){
			if(frqarr[i]==0){
				ans=true;
			}
			else{
				ans=false;
				break;
			}
		}
		return ans;
	}

}
